apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 32
    //buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "sensors_in_paradise.xsens"
        minSdkVersion 27
        targetSdkVersion 32
        versionCode 1
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                // Enable processing and uploading of native symbols to Firebase servers.
                // By default, this is disabled to improve build speeds.
                // This flag must be enabled to see properly-symbolicated native
                // stack traces in the Crashlytics dashboard.
                nativeSymbolUploadEnabled true

                strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }
        }
    }


// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
        merge 'git.properties'
    }
    buildFeatures {
        mlModelBinding true
    }
    testOptions {
        unitTests.includeAndroidResources = true
        animationsDisabled = true
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
            universalApk true
        }
    }
    namespace 'sensors_in_paradise.sonar'
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ['src/main/assets', 'src/androidTest/assets', 'src/debug/assets/']
            java.srcDirs = ['src/main/java', 'src/androidTest/java', 'src/debug/java']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation platform('com.google.firebase:firebase-bom:29.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'org.tensorflow:tensorflow-lite:2.8.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.4.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.8.0'
    implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:2.8.0'

    implementation 'androidx.camera:camera-lifecycle:1.0.2'
    implementation 'com.google.mlkit:pose-detection-common:17.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation('androidx.test:core:1.4.0')
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
    implementation "androidx.test.espresso:espresso-idling-resource:3.4.0"
    implementation "androidx.test.espresso:espresso-idling-resource:3.4.0"
    debugImplementation "androidx.test:core:1.4.0"
    implementation project(path: ':Xsens_DOT_Core')
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.21")
    implementation("com.android.volley:volley:1.2.1")
    testImplementation("junit:junit:4.13.2")
    testImplementation('androidx.test:core:1.4.0')
    testImplementation("org.mockito:mockito-core:1.10.19")
    implementation("org.robolectric:shadows-framework:4.5.1")
    implementation 'com.github.thegrizzlylabs:sardine-android:0.8'
    implementation("androidx.cardview:cardview:1.0.0")
    implementation 'com.google.android.material:material:1.6.1'

    def camerax_version = "1.1.0-beta03"
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    implementation("androidx.camera:camera-video:${camerax_version}")
    implementation("androidx.camera:camera-view:${camerax_version}")

    implementation 'com.google.mediapipe:solution-core:latest.release'
    implementation 'com.google.mediapipe:hands:latest.release'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'org.jetbrains.kotlinx:dataframe:0.8.0-rc-9'

    implementation("org.jcodec:jcodec:0.2.3")
    implementation("org.jcodec:jcodec-android:0.2.2")
    implementation("com.opencsv:opencsv:4.6")
    implementation('com.github.bmelnychuk:atv:1.2.+')

}
repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }

}
